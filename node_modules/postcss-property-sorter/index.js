var postcss = require('postcss');
var sortArray = require('sort-array');

// Require ordered CSS property arrays
var sortingPlans = {
    smacss:  require('./plans/smacss.json'),
    csscomb: require('./plans/csscomb.json')
};

module.exports = postcss.plugin('postcss-property-sorter', function (opts) {
    opts = opts || {};

    // Set the sorting plan according to the passed options
    var sortPlan = sortingPlans[opts.plan] || 'alphabetical';

    return function (css) {
        // Loop through CSS selectors
        css.walkRules(function (rule) {
            var sortedDecls = [];

            // Loop through CSS properties
            rule.walkDecls(function (decl) {
                // Push each CSS node property to an array
                sortedDecls.push(decl);
            });

            // Use the set sorting plan if not alphabetical
            if (sortPlan === 'alphabetical') {
                sortArray(sortedDecls, 'prop');
            } else {
                sortArray(sortedDecls, 'prop', {
                    prop: sortPlan
                });
            }

            // Remove all CSS properties from the CSS selector
            rule.removeAll();
            // Append sorted CSS properties to the CSS selector
            rule.append(sortedDecls);
        });
    };
});
